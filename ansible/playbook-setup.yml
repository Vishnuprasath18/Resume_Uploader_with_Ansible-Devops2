---
- name: Resume Builder - AWS Infrastructure Setup
  hosts: localhost
  gather_facts: false
  vars_files:
    - group_vars/all.yml

  tasks:
    - name: Create S3 bucket
      amazon.aws.s3_bucket:
        name: "{{ bucket_name }}"
        region: "{{ aws_region }}"
        tags: "{{ tags }}"
      register: s3_bucket

    - name: Create IAM role for EC2
      community.aws.iam_role:
        name: "{{ iam_role_name }}"
        assume_role_policy_document: |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "ec2.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
        tags: "{{ tags }}"
      register: iam_role

    - name: Attach S3 full access policy to IAM role
      community.aws.iam_policy:
        iam_type: role
        iam_name: "{{ iam_role_name }}"
        policy_name: "{{ iam_role_name }}-s3-policy"
        policy_json: |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:GetObject",
                  "s3:PutObject",
                  "s3:DeleteObject",
                  "s3:ListBucket"
                ],
                "Resource": [
                  "arn:aws:s3:::{{ bucket_name }}",
                  "arn:aws:s3:::{{ bucket_name }}/*"
                ]
              }
            ]
          }
        state: present
      register: s3_policy

    - name: Create EC2 instance profile
      amazon.aws.iam_instance_profile:
        name: "{{ iam_role_name }}-profile"
        role: "{{ iam_role_name }}"
        state: present

    - name: Create security group for Flask app
      amazon.aws.ec2_group:
        name: "{{ security_group_name }}"
        description: "Security group for Resume Builder Flask app"
        region: "{{ aws_region }}"
        rules:
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0
            rule_desc: SSH access
          - proto: tcp
            ports:
              - "{{ flask_app_port }}"
            cidr_ip: 0.0.0.0/0
            rule_desc: Flask app access
        tags: "{{ tags }}"
      register: security_group

    - name: Launch EC2 instance
      amazon.aws.ec2_instance:
        name: "{{ instance_name }}"
        instance_type: "{{ ec2_instance_type }}"
        image_id: "{{ ec2_ami }}"
        region: "{{ aws_region }}"
        security_group: "{{ security_group_name }}"
        iam_instance_profile: "{{ iam_role_name }}-profile"
        tags: "{{ tags }}"
        wait: true
        wait_timeout: 300
        user_data: |
          #!/bin/bash
          yum update -y
          yum install -y python3 python3-pip git
          
          # Create app directory
          mkdir -p /opt/resume-builder
          cd /opt/resume-builder
          
          # Clone the app (you'll need to push your code to a repo)
          # git clone https://github.com/yourusername/resume-builder.git .
          
          # Install Python dependencies
          pip3 install Flask boto3
          
          # Create systemd service
          cat > /etc/systemd/system/resume-builder.service << EOF
          [Unit]
          Description=Resume Builder Flask App
          After=network.target
          
          [Service]
          Type=simple
          User=ec2-user
          WorkingDirectory=/opt/resume-builder
          Environment=S3_BUCKET={{ bucket_name }}
          Environment=AWS_REGION={{ aws_region }}
          ExecStart=/usr/bin/python3 app.py
          Restart=always
          
          [Install]
          WantedBy=multi-user.target
          EOF
          
          # Start the service
          systemctl daemon-reload
          systemctl enable resume-builder
          systemctl start resume-builder
      register: ec2_instance

    - name: Display EC2 instance information
      debug:
        msg: |
          EC2 Instance created successfully!
          Instance ID: {{ ec2_instance.instances[0].instance_id }}
          Public IP: {{ ec2_instance.instances[0].public_ip_address }}
          Flask App URL: http://{{ ec2_instance.instances[0].public_ip_address }}:{{ flask_app_port }}
          S3 Bucket: {{ bucket_name }} 